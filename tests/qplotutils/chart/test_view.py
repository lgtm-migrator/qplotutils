#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
==============================
Test for qplotutils.chart.view
==============================



Autogenerated package stub.
"""
import unittest
import logging
import sys
import os
import numpy as np

from qtpy.QtCore import *
from qtpy.QtGui import *
from qtpy.QtOpenGL import *
from qtpy.QtWidgets import *

from qplotutils.chart.view import *

__author__ = "Philipp Baust"
__copyright__ = "Copyright 2019, Philipp Baust"
__credits__ = []
__license__ = "MIT"
__version__ = "0.0.1"
__maintainer__ = "Philipp Baust"
__email__ = "philipp.baust@gmail.com"
__status__ = "Development"

_log = logging.getLogger(__name__)


class ChartAreaTests(unittest.TestCase):

    app = None

    @classmethod
    def setUpClass(cls):
        ChartAreaTests.app = QApplication([])

    def setUp(self):
        """ Autogenerated. """
        pass
        
    def test_instantiate(self):
        """ Autogenerated. """
        obj = ChartArea()  # TODO: may fail!


class ChartAxisTests(unittest.TestCase):

    def setUp(self):
        """ Autogenerated. """
        pass
        
    def test_instantiate(self):
        """ Autogenerated. """
        obj = ChartAxis()  # TODO: may fail!


class ChartLabelTests(unittest.TestCase):

    def setUp(self):
        """ Autogenerated. """
        pass
        
    def test_instantiate(self):
        """ Autogenerated. """
        obj = ChartLabel()  # TODO: may fail!


class ChartLegendTests(unittest.TestCase):

    def setUp(self):
        """ Autogenerated. """
        pass
        
    def test_instantiate(self):
        """ Autogenerated. """
        obj = ChartLegend()  # TODO: may fail!


class ChartViewTests(unittest.TestCase):

    app = None

    @classmethod
    def setUpClass(cls):
        cls.app = QApplication([])

    def setUp(self):
        """ Autogenerated. """
        pass
        
    def test_instantiate(self):
        """ Autogenerated. """
        obj = ChartView()  # TODO: may fail!


class ChartWidgetTests(unittest.TestCase):

    def setUp(self):
        """ Autogenerated. """
        pass
        
    def test_instantiate(self):
        """ Autogenerated. """
        obj = ChartWidget()  # TODO: may fail!


class HorizontalAxisTests(unittest.TestCase):

    def setUp(self):
        """ Autogenerated. """
        pass
        
    def test_instantiate(self):
        """ Autogenerated. """
        obj = HorizontalAxis()  # TODO: may fail!


class ScaleBoxTests(unittest.TestCase):

    def setUp(self):
        """ Autogenerated. """
        pass
        
    def test_instantiate(self):
        """ Autogenerated. """
        obj = ScaleBox()  # TODO: may fail!


class SecondaryHorizontalAxisTests(unittest.TestCase):

    def setUp(self):
        """ Autogenerated. """
        pass
        
    def test_instantiate(self):
        """ Autogenerated. """
        obj = SecondaryHorizontalAxis([0,1], [0, 100])  # TODO: may fail!


class SecondaryVerticalAxisTests(unittest.TestCase):

    def setUp(self):
        """ Autogenerated. """
        pass
        
    def test_instantiate(self):
        """ Autogenerated. """
        obj = SecondaryVerticalAxis([0,1], [0, 100])  # TODO: may fail!


class StyleTests(unittest.TestCase):

    def setUp(self):
        """ Autogenerated. """
        pass
        
    def test_instantiate(self):
        """ Autogenerated. """
        obj = Style()  # TODO: may fail!


class VerticalAxisTests(unittest.TestCase):

    def setUp(self):
        """ Autogenerated. """
        pass
        
    def test_instantiate(self):
        """ Autogenerated. """
        obj = VerticalAxis()  # TODO: may fail!


class VerticalChartLabelTests(unittest.TestCase):

    def setUp(self):
        """ Autogenerated. """
        pass
        
    def test_instantiate(self):
        """ Autogenerated. """
        obj = VerticalChartLabel()  # TODO: may fail!