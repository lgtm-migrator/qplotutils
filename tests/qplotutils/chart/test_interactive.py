#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
=====================================
Test for qplotutils.chart.interactive
=====================================



Autogenerated package stub.
"""
import pytest
from pytestqt.qtbot import QtBot
import logging
import sys
import os
import numpy as np

from qtpy.QtCore import *
from qtpy.QtGui import *
from qtpy.QtOpenGL import *
from qtpy.QtWidgets import *

from qplotutils.chart.interactive import *
from qplotutils.chart.items import LineChartItem
from qplotutils.chart.view import ChartView

__author__ = "Philipp Baust"
__copyright__ = "Copyright 2019, Philipp Baust"
__credits__ = []
__license__ = "MIT"
__version__ = "0.0.2"
__maintainer__ = "Philipp Baust"
__email__ = "philipp.baust@gmail.com"
__status__ = "Development"

_log = logging.getLogger(__name__)


@pytest.fixture()
def view(qtbot: QtBot):
    view = ChartView(orientation=ChartView.CARTESIAN)
    view.resize(800, 800)
    view.show()

    l = LineChartItem()
    x = np.arange(-30, 300, 0.2, dtype=np.float)
    y = np.sin(2 * np.pi * 3 / float(max(x) - min(x)) * x)
    l.plot(y, x, "a sine")
    view.addItem(l)
    view.autoRange()

    qtbot.addWidget(view)
    return view


DELAY = 5000


class TestInteractiveChangeEvent(object):
    # autogenerator: no functions found
    pass


class TestInteractiveVerticalLine(object):
    def test_vline(self, view: ChartView, qtbot: QtBot):
        view.setLegendVisible(True)
        ivline = InteractiveVerticalLine()
        ivline.setX(5, "Current Timestamp", Qt.red)
        view.addItem(ivline)
        # view.autoRange()

        qtbot.wait(DELAY)

    def test_vline_without_label(self, view: ChartView, qtbot: QtBot):
        ivline = InteractiveVerticalLine()
        ivline.setX(5)
        view.addItem(ivline)
        # view.autoRange()

        qtbot.wait(DELAY)

    def test_hoverEnterEvent(self, view: ChartView, qtbot: QtBot, qapp: QApplication):
        """ Tests for hoverEnterEvent
        
        """
        ivline = InteractiveVerticalLine()
        ivline.setX(5)
        view.addItem(ivline)

        for k in range(800):
            qtbot.mouseMove(view, QPoint(k, 10))

    def test_hoverLeaveEvent(self):
        """ Tests for hoverLeaveEvent
        
        """
        # Autogenerated test skeleton for hoverLeaveEvent
        pass

    def test_itemChange(self):
        """ Tests for itemChange
        
        """
        # Autogenerated test skeleton for itemChange
        pass

    def test_label(self):
        """ Tests for label
        
        """
        # Autogenerated test skeleton for label
        pass

    def test_paint(self):
        """ Tests for paint
        
        """
        # Autogenerated test skeleton for paint
        pass

    def test_setX(self):
        """ Tests for setX
        
        """
        # Autogenerated test skeleton for setX
        pass

    def test_visibleRangeChanged(self):
        """ Tests for visibleRangeChanged
        
        """
        # Autogenerated test skeleton for visibleRangeChanged
        pass
