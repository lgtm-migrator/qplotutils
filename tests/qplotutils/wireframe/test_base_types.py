#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
========================================
Test for qplotutils.wireframe.base_types
========================================



Autogenerated package stub.
"""
import pytest
from pytestqt.qtbot import QtBot
import logging
import sys
import os
import numpy as np

from qtpy.QtCore import *
from qtpy.QtGui import *
from qtpy.QtOpenGL import *
from qtpy.QtWidgets import *

from qplotutils.wireframe.base_types import *

__author__ = "Philipp Baust"
__copyright__ = "Copyright 2019, Philipp Baust"
__credits__ = []
__license__ = "MIT"
__version__ = "0.0.2"
__maintainer__ = "Philipp Baust"
__email__ = "philipp.baust@gmail.com"
__status__ = "Development"

_log = logging.getLogger(__name__)


class TestDefaultGlOptions(object):
    # autogenerator: no functions found
    pass


class TestVector3d(object):

    def test__str__(self):
        """ Tests for _str__
        
        """
        v = Vector3d(6,7,8)
        s = str(v)
        assert s is not None

    def test_cross(self):
        """ Tests for cross
        
        """
        v1 = Vector3d(1, 0, 0)
        v2 = Vector3d(0, 1, 0)
        v3 = v1.cross(v2)
        assert v3.z == 1

    def test_norm(self):
        """ Tests for norm
        
        """
        v = Vector3d(1, 2, 3)
        assert v.norm == np.sqrt(1 ** 2 + 2 ** 2 + 3 ** 2)

    def test_normalize(self):
        """ Tests for normalize
        
        """
        v = Vector3d(1, 2, 3)
        assert v.normalize().norm == 1

    def test_x(self):
        """ Tests for x
        
        """
        v = Vector3d(1,2,3)
        assert v.x == 1
        v.x = .9
        assert v.x == .9

    def test_y(self):
        """ Tests for y
        
        """
        v = Vector3d(1, 2, 3)
        assert v.y == 2
        v.y = .9
        assert v.y == .9

    def test_z(self):
        """ Tests for z
        
        """
        v = Vector3d(1, 2, 3)
        assert v.z == 3
        v.z = .9
        assert v.z == .9